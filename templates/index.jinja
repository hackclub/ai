<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Hack Club | AI</title>
    <style>
      :root {
        --bg-light: #fff;
        --bg-dark: #13151A;
        --text-light: #222;
        --text-dark: #f2f2f2;
        --link-light: #0b5cff;
        --link-dark: #66aaff;
        --header-bg-light: #f5f5f5;
        --header-bg-dark: #222a35;
        --border-light: #e0e0e0;
        --border-dark: #333a44;
      }

      body {
        background: var(--bg-light);
        color: var(--text-light);
        font-family: system-ui, sans-serif;
        margin: 0;
        padding: 0;
        transition: background 0.2s, color 0.2s;
      }

      a {
        color: var(--link-light);
        transition: color 0.2s;
      }

      header {
        background: var(--header-bg-light);
        border-bottom: 1px solid var(--border-light);
        padding: 2rem 1rem 1rem 1rem;
        margin-bottom: 2rem;
        text-align: center;
        transition: background 0.2s, border 0.2s;
      }

      section {
        max-width: 700px;
        margin: 2rem auto;
        padding: 1rem;
        background: rgba(0,0,0,0.02);
        border-radius: 12px;
      }

      pre {
        background: #f6f6f6;
        padding: 0.6em 1em;
        border-radius: 7px;
        overflow-x: auto;
      }

      code {
        background: #f2f2f2;
        padding: 0.2em 0.4em;
        border-radius: 5px;
      }

      body.dark-mode {
        background: var(--bg-dark);
        color: var(--text-dark);
      }

      body.dark-mode a {
        color: var(--link-dark);
      }

      body.dark-mode header {
        background: var(--header-bg-dark);
        border-bottom: 1px solid var(--border-dark);
      }

      body.dark-mode section {
        background: rgba(20, 25, 35, 0.8);
      }

      body.dark-mode pre {
        background: #23272e;
        color: #f2f2f2;
      }

      body.dark-mode code {
        background: #23272e;
        color: #ffe59e;
      }

      .dark-mode-toggle {
        position: absolute;
        top: 1.5rem;
        right: 2rem;
        z-index: 10;
        background: none;
        border: 2px solid #bbb;
        border-radius: 2em;
        padding: 0.5em 1.2em;
        font-size: 1em;
        color: inherit;
        cursor: pointer;
        transition: background 0.2s, border 0.2s;
      }

      body.dark-mode .dark-mode-toggle {
        border-color: #444;
        background: #181d24;
        color: #f2f2f2;
      }
    </style>
  </head>
  <body>
    <button class="dark-mode-toggle" id="darkModeToggle" aria-label="Toggle dark mode">
      ðŸŒ™ Dark Mode
    </button>
    <header>
      <h1>ai.hackclub.com</h1>
      <p>
        An experimental service providing unlimited
        <code>/chat/completions</code> for free, for teens in
        <a href="https://hackclub.com/" target="_blank">Hack Club</a>. No API
        key needed.
      </p>
      <p>
        <b>{{ total_tokens }}</b> tokens processed since January 2025. Current
        model:
        <b
          ><code>{{ model }}</code></b
        >.
      </p>
      <p>
        Open source at
        <a href="https://github.com/hackclub/ai">github.com/hackclub/ai</a>!
      </p>
    </header>

    <section>
      <h2>Usage</h2>
      <h3>Chat Completions</h3>
      <pre><code>curl -X POST https://ai.hackclub.com/chat/completions \
    -H "Content-Type: application/json" \
    -d '{
        "messages": [{"role": "user", "content": "Tell me a joke!"}]
    }'</code></pre>

      <h3>Get Current Model</h3>
      <p>To get current model:</p>
      <pre><code>curl https://ai.hackclub.com/model</code></pre>
      <p>Example response: <code>{{ model }}</code></p>
    </section>

    <section>
      <h2>API Parameters</h2>
      <p>The API accepts all standard OpenAI-style parameters for chat completions:</p>
      <ul>
        <li><code>messages</code> - Array of message objects with role and content</li>
        <li><code>model</code> - (Ignored) Model is set server-side</li>
        <li><code>temperature</code> - Controls randomness (0.0 to 2.0)</li>
        <li><code>max_completion_tokens</code> - Maximum number of tokens to generate</li>
        <li><code>top_p</code> - Controls diversity via nucleus sampling</li>
        <li><code>frequency_penalty</code> - Reduces repetition of token sequences</li>
        <li><code>presence_penalty</code> - Reduces repetition of tokens</li>
        <li><code>stream</code> - Set to true for streaming responses</li>
        <li><code>stop</code> - Array of tokens at which to stop generation</li>
        <li><code>response_format</code> - Format of the response (e.g., JSON mode)</li>
        <li><code>seed</code> - Integer for random seed to enable deterministic sampling</li>
        <li><code>tools</code> - List of tools the model may call</li>
        <li><code>tool_choice</code> - Controls which (if any) tool is called</li>
        <li><code>include_reasoning</code> - Set to true to include reasoning in responses (reasoning models only)</li>
        <li><code>reasoning_format</code> - Format for reasoning output (reasoning models only)</li>
        <li><code>reasoning_effort</code> - Controls the reasoning effort for Qwen models (none or default)</li>
      </ul>
      <p><strong>Note:</strong> The <code>model</code> parameter is ignored as the model is configured server-side.</p>
      <p><strong>Note:</strong> Reasoning parameters (<code>include_reasoning</code> and <code>reasoning_format</code>) only work when the currently set model is a reasoning model.</p>
      <p><strong>Note:</strong> The <code>reasoning_effort</code> parameter only works for Qwen models. Use "none" for fast responses without reasoning or "default" for normal reasoning effort.</p>
    </section>

    <section>
	<h2>Terms</h2>
	<p>
	  You must be a teenager in the <a href="https://hackclub.com/slack">Hack Club Slack</a>.
	  All requests and responses are logged to prevent abuse.
	  Projects only â€” no personal use. This means you can't use it in Cursor or anything similar for the moment!
	  Abuse means this will get shut down â€” we're a nonprofit funded by donations.
	</p>
    </section>
    <script>
      const btn = document.getElementById("darkModeToggle");

      function setMode(mode) {
        if (mode === "dark") {
          document.body.classList.add("dark-mode");
          btn.textContent = "Light Mode";
        } else {
          document.body.classList.remove("dark-mode");
          btn.textContent = "Dark Mode";
        }
        localStorage.setItem("color-mode", mode);
      }

      (function () {
        const saved = localStorage.getItem("color-mode");
        if (saved) {
          setMode(saved);
        } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          setMode("dark");
        } else {
          setMode("light");
        }
      })();

      btn.addEventListener("click", () => {
        const isDark = document.body.classList.contains("dark-mode");
        setMode(isDark ? "light" : "dark");
      });
    </script>
  </body>
</html>
